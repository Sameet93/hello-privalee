name: CI/CD Workflow

on: [push]

jobs:

  setup-go-module:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - name: Initialize Go Module
        run: go mod init ${{ secrets.MODULE_PATH }}
      - name: Install dependencies
        run: go mod tidy
      - name: Upload go.mod as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: go-files
          path: |
            go.mod
            go.sum 

  test:
    needs: setup-go-module
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: get go files
      uses: actions/download-artifact@v2
      with:
        name: go-files
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.18' 
    - name: Test
      run: go test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: get go files
      uses: actions/download-artifact@v2
      with:
        name: go-files
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build and Push Docker image
      run: |
        echo "Docker Image Tag: ${{ secrets.ECR_REGISTRY }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest"
        docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest .
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name <your-cluster-name>
      
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f infra/kubernetes/app/deployment.yaml
          kubectl apply -f infra/kubernetes/app/service.yaml


